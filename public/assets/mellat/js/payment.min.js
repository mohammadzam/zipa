function validatePaymentInputs(e) {
    var n = !0;
    return validatePan() || (n = !1), e && !validateInput("inputpin", /\d{5,12}/) && (n = !1), validateInput("inputcvv2", /\d{3,4}/) || (n = !1), validateDate() || (n = !1), validateInput("inputcapcha", /\d{5}/) || (n = !1), validateInput("inputemail", /^(\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,4})+)?$/) || (n = !1), document.getElementById("inputpayerid") && !validateInput("inputpayerid", /\d{1,30}/) && (n = !1), n ? hideMessage() : showMessage(i18n.invalidInput), n
}

function removeInvalidClassFromPan() {
    $("#cardnumberbox").parent().parent().removeClass("invalid")
}

function addInvalidClassToPan() {
    $("#cardnumberbox").parent().parent().addClass("invalid")
}

function validatePan() {
    var e = checkPattern("cardnumber", /\d{4}\s?\d{4}\s?\d{4}\s?\d{4}/) || checkPattern("cardnumber", /(-){4}\s?(-){4}\s?(-){4}\s?\d{4}/) || selectedPanIndex > -1 && checkPattern("cardnumber", /\d{4}\s?\d{2}(×){2}\s?(×){4}\s?\d{4}/);
    return e ? removeInvalidClassFromPan() : addInvalidClassToPan(), e
}

function doPayment(e, n) {
    var t = {
        pan: selectedPanIndex >= 0 ? null : document.getElementById("cardnumber").value.replace(/ /g, ""),
        selectedPanIndex: selectedPanIndex,
        pin: document.getElementById("inputpin").value,
        cvv2: document.getElementById("inputcvv2").value,
        expireMonth: document.getElementById("inputmonth") ? document.getElementById("inputmonth").value : null,
        expireYear: document.getElementById("inputyear") ? document.getElementById("inputyear").value : null,
        captcha: document.getElementById("inputcapcha").value,
        payerId: document.getElementById("inputpayerid") ? document.getElementById("inputpayerid").value : null,
        email: document.getElementById("inputemail").value,
        savePan: document.getElementById("savePanCheckbox") ? document.getElementById("savePanCheckbox").checked : !1
    };
    showSubmitSpinner(), $.ajax({
        contentType: "application/json",
        data: JSON.stringify(t),
        dataType: "json",
        success: n,
        type: "POST",
        url: e + "?RefId=" + encRefId
    })
}

function processSaleResponse(e) {
    if (hideSubmitSpinner(), e)
        if ("OK" === e.status) paymentSuccessfullyDone = !0, document.forms.resultForm.submit();
        else if ("BLOCKER_ERROR" === e.status) document.forms.resultForm.submit();
    else if (validatePaymentInputs(!0), "INVALID_CAPTCHA" === e.status) "-1" === e.responseCode && refreshCaptcha(), showMessage(i18n.invalidInput), $("#inputcapcha").parent().parent().addClass("invalid");
    else switch (refreshCaptcha(), e.status) {
        case "INVALID_PAYER_ID":
            showMessage(i18n.invalidInput), $("#inputpayerid").parent().parent().addClass("invalid");
            break;
        case "SYSTEM_INTERNAL_ERROR":
            showMessage(i18n.systemInternalError);
            break;
        case "INVALID_NATIONAL_CODE":
            showMessage(e.description), $("#cardnumberbox").parent().parent().addClass("invalid");
            break;
        case "SALE_FAILED":
            "415" === e.responseCode || "419" === e.responseCode ? (stopCountDown(), showMessage(i18n.transactionTimeout), document.getElementById("ResCode").value = e.responseCode, document.forms.returnForm.submit()) : "11" === e.responseCode && addInvalidClassToPan(), showMessage(e.description)
    }
}

function refreshCaptcha() {
    $("#inputcapcha").val(""), document.getElementById("captcha-img").src = "captchaimg.jpg?RefId=" + encRefId + "&rnd= " + Math.random(), enableCaptcha()
}

function showMessage(e, n) {
    $(".card-errorbox").text(e), n && $(".card-errorbox").addClass("info-message"), $(".card-errorbox").addClass("show"), setTimeout("hideMessage()", 1e4)
}

function hideMessage() {
    $(".card-errorbox").removeClass("show"), $(".card-errorbox").removeClass("info-message")
}

function handleUnknownError(e, n, t) {
    hideSubmitSpinner(), hideBankLogoSpinner(), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc(), showMessage(0 === e.status ? i18n.networkError : 404 === e.status ? i18n.systemInternalError : 500 == e.status ? i18n.systemInternalError : "parsererror" === n ? i18n.systemInternalError : "timeout" === n ? i18n.networkError : "abort" === n ? i18n.networkError : "ajaxError" == e.type ? i18n.networkError : i18n.systemInternalError)
}

function validateAndDoPayment(e, n) {
    validatePaymentInputs(!0) && doPayment(e, n)
}

function removeInvalidClassFromInput(e) {
    $("#" + e).parent().parent().removeClass("invalid")
}

function validateInput(e, n) {
    return checkPattern(e, n) ? (removeInvalidClassFromInput(e), !0) : (addInvalidClassToInput(e), !1)
}

function addInvalidClassToInput(e) {
    $("#" + e).parent().parent().addClass("invalid")
}

function validateDate() {
    var e = !0;
    if ($("#inputmonth:visible").length > 0) {
        checkPattern("inputmonth", /\d{2}/) || (e = !1);
        var n = document.getElementById("inputmonth").value;
        (1 > n || n > 12) && (e = !1)
    }
    return $("#inputyear:visible").length > 0 && !checkPattern("inputyear", /\d{2}/) && (e = !1), e ? removeInvalidClassFromInput("inputmonth") : $("#inputmonth").parent().parent().addClass("invalid"), e
}

function focusNextField(e, n, t) {
    if (isNumericKeyDownOrUp(getEventKeyCode(t)) && e.value.length >= e.maxLength)
        for (var a = n.split("|"), i = 0; i < a.length; i++) {
            var o = a[i];
            if ($("#" + o + ":visible").length > 0) {
                focusField(o);
                break
            }
        }
}

function focusField(e) {
    var n = document.getElementById(e);
    n.focus(), "button" !== n.type && n.setSelectionRange(0, n.value.length)
}

function hideKeypadOnTab(e) {
    9 === getEventKeyCode(e) && hideKeypad()
}

function checkPattern(e, n) {
    return n.test(document.getElementById(e).value)
}

function setPanCursorPosition(e) {
    var n = document.getElementById("cardnumber"),
        t = getEventKeyCode(e);
    if (cursorPosition = n.selectionStart, 8 === t) {
        if (0 !== cursorPosition) {
            var a = n.value.substring(n.selectionStart, n.selectionEnd);
            / /.test(a) ? (5 === cursorPosition || 10 === cursorPosition || 15 === cursorPosition) && cursorPosition-- : ((6 === cursorPosition || 11 === cursorPosition || 16 === cursorPosition) && cursorPosition--, cursorPosition--), cursorPosition = 0 > cursorPosition ? 0 : cursorPosition
        }
    } else 46 === t ? (4 === cursorPosition || 9 === cursorPosition || 14 === cursorPosition) && cursorPosition++ : isNumericKeyDownOrUp(t) && ((3 === cursorPosition || 8 === cursorPosition || 13 === cursorPosition || 4 === cursorPosition || 9 === cursorPosition || 14 === cursorPosition) && cursorPosition++, cursorPosition++)
}

function formatPanOnKeyDown(e) {
    if (shouldIgnore(getEventKeyCode(e))) return !0;
    var n = document.getElementById("cardnumber"),
        t = concatNumericChars(n.value, 16);
    n.value = getFormattedPan(t)
}

function shouldIgnore(e) {
    var n = 86;
    return !(!e || isNumericKeyDownOrUp(e) || ctrlDown && e === n)
}

function formatPanOnKeyUp(e) {
    var n = getEventKeyCode(e);
    if (shouldIgnore(n)) return !0;
    var t = document.getElementById("cardnumber"),
        a = concatNumericChars(t.value, 16);
    t.value = getFormattedPan(a);
    var i = 8,
        o = 46;
    !n || isNumericKeyDownOrUp(n) || n === i || n === o
}

function getFormattedPan(e) {
    for (var n, t = "", a = /\d{1,4}/g; null != (n = a.exec(e));) 0 !== t.length && (t += " "), t += n[0];
    return t
}

function concatNumericChars(e, n) {
    for (var t, a = "", i = /\d{1,16}/g; null != (t = i.exec(e)) && a.length < n;) a += t[0];
    return a.length > n && (a = a.substring(0, n)), a
}

function extractNumbers(e, n) {
    var t = e.value;
    t = concatNumericChars(t, n), e.value = t
}

function preventInvalidKeys(e) {
    var n = getEventKeyCode(e),
        t = [16, 17, 91, 0, 13, 8, 9, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46];
    if (-1 !== t.indexOf(n)) return !0;
    if (isNumericKeyDownOrUp(n)) return !0;
    if (ctrlDown) return !0;
    var a = 112,
        i = 123;
    return n >= a && i >= n ? !0 : (window.event ? window.event.returnValue = !1 : e.preventDefault(), !1)
}

function isNumericKeyDownOrUp(e) {
    return e > 47 && 58 > e || e > 95 && 106 > e
}

function getEventKeyCode(e) {
    return window.event ? e.keyCode : e.which
}

function cancelPay() {
    return document.getElementById("ResCode").value = "17", document.forms.returnForm.submit(), !1
}

function countDownRemainingTime(e) {
    if (!disableCountDown) {
        if (0 >= e) stopCountDown(), paymentSuccessfullyDone || (document.getElementById("ResCode").value = "415", document.forms.returnForm.submit());
        else {
            var n = Math.floor(e / 60),
                t = e % 60;
            $("#remaining-time b").text((n + "").padStart(2, "0") + ":" + (t + "").padStart(2, "0"))
        }
        globalRemainingSeconds = e - 1, setTimeout("countDownRemainingTime(globalRemainingSeconds)", 1e3)
    }
}

function stopCountDown() {
    disableCountDown = !0, $("#remaining-time b").text("--:--")
}

function fillField(e, n) {
    if (focusedField) {
        n.preventDefault(), n.stopPropagation(), focusedField.focus();
        var t, a = e.value,
            i = focusedField.selectionStart,
            o = focusedField.selectionEnd;
        t = i === focusedField.value.length ? focusedField.value + a : focusedField.value.substring(0, i) + a + focusedField.value.substring(o, focusedField.value.length), t.length <= focusedField.maxLength && (focusedField.value = t), focusedField.value.length === focusedField.maxLength && keypadTab()
    }
    return !1
}

function keypadTab() {
    hideKeypad();
    var e = "inputpin" === focusedField.id ? "payButton" : $("#inputmonth:visible").length > 0 ? "inputmonth" : "inputcapcha",
        n = document.getElementById(e);
    n.focus(), n.setSelectionRange(0, n.value.length)
}

function keyPadBackspace(e) {
    if (focusedField) {
        e.preventDefault(), e.stopPropagation(), focusedField.focus();
        var n = focusedField.selectionStart,
            t = focusedField.selectionEnd;
        n === focusedField.value.length ? focusedField.value = focusedField.value.substring(0, focusedField.value.length - 1) : n === t ? focusedField.value = focusedField.value.substring(0, n - 1) + focusedField.value.substring(t, focusedField.value.length) : focusedField.value = focusedField.value.substring(0, n) + focusedField.value.substring(t, focusedField.value.length)
    }
    return !1
}

function setFocusedField(e) {
    focusedField = e
}

function shuffleKeypad() {
    shuffledArray = shuffle([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
    for (var e = 0; e < shuffledArray.length; e++) {
        var n = "num" + e,
            t = document.getElementById(n);
        t.value = shuffledArray[e], t.innerHTML = shuffledArray[e]
    }
}

function showKeypadJustInMobile(e, n) {
    var t = window.matchMedia("(max-width: 575.98px)");
    t.matches && showKeypad(e, n)
}

function showKeypad(e, n) {
    keyPadInputId = e;
    var t = document.getElementById(e);
    return t.focus(), setFocusedField(t), shuffledArray || shuffleKeypad(), $(".keypad-container").insertAfter("#" + e), $(".keypad-container").addClass("openkeypad"), n && (n.preventDefault(), n.stopPropagation()), !1
}

function hideKeypad() {
    $(".keypad-container").removeClass("openkeypad")
}

function hideOthersKeypad(e) {
    e.id !== keyPadInputId && hideKeypad()
}

function shuffle(e) {
    var n, t, a;
    for (a = e.length - 1; a > 0; a--) n = Math.floor(Math.random() * (a + 1)), t = e[a], e[a] = e[n], e[n] = t;
    return e
}

function waitAndSendSuccessResult(e) {
    0 >= e ? document.getElementById("return-button").disabled || sendSuccessResult() : ($(".timer").text(i18n.redirectRemainingTime + e), globalRemainingSeconds = e - 1, setTimeout("waitAndSendSuccessResult(globalRemainingSeconds)", 1e3))
}

function sendSuccessResult() {
    document.getElementById("return-button").disabled || successResultSubmitted || (document.getElementById("return-button").disabled = !0, $("#return-button").attr("disabled", "disabled").html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>' + i18n.redirectingToMerchantSite), $(".timer").hide(), document.forms.returnForm.submit(), successResultSubmitted = !0, setTimeout("enableReturnButton()", 3e4))
}

function enableReturnButton() {
    successResultSubmitted = !1, $("#return-button").attr("disabled", "disabled").html(i18n.continueShopping), document.getElementById("return-button").disabled = !1
}

function hideKeypadOnOutsideClick(e) {
    var n = $(".keypad-container").parent()[0];
    n !== e.target && 0 === $(e.target).parents(".keypad-parent").length && hideKeypad()
}

function hideCardSuggestionListOnOutSideClick(e) {
    var n = $(".cardnumberbox")[0];
    n !== e.target && 0 === $(e.target).parents(".cardnumberbox").length && hideCardSuggestionList()
}

function showSubmitSpinner() {
    $(".btn-decline").hide(), $(".btn-submit-form").addClass("perches-requested"), $(".btn-perches").attr("disabled", "disabled").html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>' + i18n.sendingInformation)
}

function hideSubmitSpinner() {
    $(".btn-perches").removeAttr("disabled").html(i18n.pay), $(".btn-submit-form").removeClass("perches-requested"), $(".btn-decline").show()
}

function showBankLogoSpinner() {
    $(".banklogo").append('<span class="spinner-border spinner-border-sm " role="status" aria-hidden="true"></span>')
}

function hideBankLogoSpinner() {
    $(".banklogo").find(".spinner-border").remove()
}

function checkPanDiscount(e) {
    var n = new Intl.NumberFormat,
        t = n.format(originalAmount);
    $(".price-number").text(t + " " + i18n.rial);
    var a = "discount.mellat";
    prepare4DiscountServiceCall(), selectedPanIndex >= 0 ? $.post(a, {
        W_REFID: encRefId,
        SELECTED_PAN_INDEX: selectedPanIndex
    }, processDiscountResponse) : $.post(a, {
        W_REFID: encRefId,
        PAN: e
    }, processDiscountResponse)
}

function handlePanChange() {
    var e = document.getElementById("cardnumber").value.replace(/ /g, "");
    isNewPan(e) && (previousSelectedPanIndex = selectedPanIndex, previousPan = e, enableCaptcha(), terminalDiscountStatus > 0 && checkPanDiscount(e))
}

function prepare4DiscountServiceCall() {
    showBankLogoSpinner(), $("payButton").attr("disabled", "disabled")
}

function openDiscountDialog(e, n) {
    $("#discount-body p").html(e), $("#discount-submit-button").click(function() {
        setAmount(n), hideBankLogoSpinner(), hideDiscountDialog()
    }), $("#discount-cancel-button").click(function() {
        setAmount(originalAmount), hideBankLogoSpinner(), hideDiscountDialog();
        var e = document.getElementById("cardnumber");
        e.focus(), e.setSelectionRange(0, e.value.length)
    }), showDiscountDialog(), hideKeypad(), $("#discount-submit-button").focus()
}

function setPan(e) {
    $("#cardnumber").val(e), removeInvalidClassFromPan()
}

function hideDiscountDialog() {
    $("#discount-modal").hide(), $("#discount-modal-backdrop").hide()
}

function showDiscountDialog() {
    $("#discount-modal-backdrop").show(), $("#discount-modal").show()
}

function showDynamicPinDialog() {
    $("#dynamic-pin-modal-backdrop").show(), $("#dynamic-pin-modal").show(), $(".modal-footer .btn-primary").focus()
}

function removeDynamicPinDialog() {
    $("#dynamic-pin-modal").remove(), $("#dynamic-pin-modal-backdrop").remove()
}

function setAmount(e) {
    var n = new Intl.NumberFormat;
    $(".price-number").text(n.format(e) + " " + i18n.rial)
}

function setCardSuggestionListHeight() {
    var e = .7 * $(".carddetail").height() + "px";
    $(".card-suggestionlist").css({
        "max-height": e
    })
}

function filterAndShowCardSuggestionList() {
    var e = [];
    if (panDtoList)
        for (var n = document.getElementById("cardnumber").value.replace(/ /g, ""), t = 0; t < panDtoList.length; t++) {
            var a = panDtoList[t];
            a.index = t, 0 === a.maskedPan.lastIndexOf(n, 0) && e.push(a)
        }
    showCardSuggestionList(e)
}

function toggleAllPans() {
    if ($("#card-list-button.close-button").length > 0) hideCardSuggestionList();
    else {
        for (var e = 0; e < panDtoList.length; e++) {
            var n = panDtoList[e];
            n.index = e
        }
        showCardSuggestionList(panDtoList);
        var t = document.getElementById("cardnumber");
        t.focus(), t.setSelectionRange(0, t.value.length)
    }
}

function showCardSuggestionList(e) {
    if (e.length > 0) {
        $(".card-suggestionlist").children("div:not(.editcard)").remove();
        for (var n = e.length - 1; n > -1; n--) {
            var t = e[n],
                a = t.maskedPan,
                i = a.substring(0, 6),
                o = '<div class="dropdown-item"> <span class="btn btn-sm zero-margin-right" tabindex="-1" onclick="deleteSelectedPan(' + t.index + ',event)"><span class="close-button-red"></span></span> <span class="btn btn-sm zero-margin-right"  tabindex="-1"  onclick="selectPan(' + t.index + ',event)"><span class="zero-margin-right">' + (isBankLogoAvailable(i) ? '<img src="' + getBankLogoSrc(i) + '">' : "") + "</span>" + a + " " + t.bankName + "</span>  </div>";
            $(".card-suggestionlist").prepend(o)
        }
        $(".cardnumberbox").addClass("opensugestion"), $("#card-list-button").addClass("close-button")
    } else hideCardSuggestionList()
}

function setBankLogo() {
    $(".banklogo").children().remove();
    var e = document.getElementById("cardnumber").value.replace(/ /g, "");
    if (e.length >= 6) {
        var n = e.substring(0, 6);
        if (isBankLogoAvailable(n)) {
            var t = '<img src="' + getBankLogoSrc(n) + '">';
            $(".banklogo").append(t)
        }
    }
}

function hideCardSuggestionList() {
    $(".cardnumberbox").removeClass("opensugestion"), $("#card-list-button").removeClass("close-button")
}

function deleteSelectedPan(e, n) {
    if (e < panDtoList.length) {
        var t = panDtoList[e],
            a = t.maskedPan,
            i = {
                pan: a,
                selectedPanIndex: e
            };
        panDtoList.splice(e, 1), showCardSuggestionList(panDtoList), $.ajax({
            contentType: "application/json",
            data: JSON.stringify(i),
            dataType: "json",
            success: processDeleteSelectedPanResponse,
            type: "POST",
            url: "mobile-pan-delete-request.mellat?RefId=" + encRefId
        })
    } else hideCardSuggestionList(), setBankLogo()
}

function processDeleteSelectedPanResponse(e) {
    console.log(e)
}

function selectPan(e, n) {
    if (selectedPanIndex = -1, e < panDtoList.length) {
        var t = panDtoList[e],
            a = t.maskedPan,
            i = a.substring(0, 4);
        i += " " + a.substring(4, 6), i += "×× ×××× ", i += a.substring(a.length - 4, a.length), setPan(i), selectedPanIndex = e, t.hasExpireDate && maskExpireDate(), t.email && $("#inputemail").val(t.email);
        var o = document.getElementById("inputpin"),
            s = document.getElementById("inputcvv2");
        showKeypadJustInMobile("inputcvv2", n), s.focus(), s.setSelectionRange(0, s.value.length), o.setSelectionRange(0, o.value.length), $("#inputcvv2").val(""), hideCardSuggestionList(), setBankLogo(), handlePanChange()
    } else hideCardSuggestionList(), setBankLogo()
}

function maskExpireDate() {
    var e = $("#inputmonth").val("").hide().attr("class"),
        n = $("#inputyear").val("").hide().attr("class"),
        t = '<input id="inputMonthEnc" type="password" style="background-color: #FFFFFF" class="' + e + '" tabindex="-1" value="**" onclick="unmaskExpireDate(true)" readonly/>';
    $("#inputmonth").next().remove(), $(t).insertAfter("#inputmonth");
    var a = '<input id="inputYearEnc" type="password" style="background-color: #FFFFFF" class="' + n + '" tabindex="-1" value="**" onclick="unmaskExpireDate(true)" readonly/>';
    $("#inputyear").next().remove(), $(a).insertAfter("#inputyear")
}

function unmaskExpireDate(e) {
    $("#inputmonth").next().remove(), $("#inputyear").next().remove(), e ? $("#inputmonth").show().focus() : $("#inputmonth").show(), $("#inputyear").show()
}

function isBankLogoAvailable(e) {
    return e = parseInt(e), !!availableBankLogos[e]
}

function resetSelectedPan(e) {
    return shouldIgnore(getEventKeyCode(e)) ? !0 : (selectedPanIndex = -1, void unmaskExpireDate(!1))
}

function getBankLogoSrc(e) {
    var n = availableBankLogos[e];
    return  "http://127.0.0.1:8000/assets/mellat/img/bank-logo/" + n + ".png"
}

function isNewPan(e) {
    return selectedPanIndex >= 0 && previousSelectedPanIndex !== selectedPanIndex || 16 === e.length && previousPan !== e
}

function validateAndRequestOTP() {
    if (validatePaymentInputs(!1)) {
        var e = document.getElementById("cardnumber").value.replace(/ /g, "");
        isNewPan(e) ? (previousSelectedPanIndex = selectedPanIndex, previousPan = e, requestOTP()) : (new Date).getTime() - previousOTPRequestMillis < otpRequestWaitMillis ? showMessage(i18n.otpWaitMessage) : requestOTP()
    }
}

function requestOTP() {
    var e = {
        pan: selectedPanIndex >= 0 ? null : document.getElementById("cardnumber").value.replace(/ /g, ""),
        selectedPanIndex: selectedPanIndex,
        captcha: document.getElementById("inputcapcha").value
    };
    disableOtpButton(), disableCaptcha(), disableCardNumber(), disableCvv2KeyPad(), disableCardListButton(), disableInputCVV2(), disableInputMonth(), disableInputYear(), disableInputMonthEnc(), disableInputYearEnc(), showBankLogoSpinner(), $.ajax({
        contentType: "application/json",
        data: JSON.stringify(e),
        dataType: "json",
        success: processOtpResponse,
        type: "POST",
        url: "otp-request.mellat?RefId=" + encRefId
    })
}

function processOtpResponse(e) {
    if (hideBankLogoSpinner(), e) switch (e.status) {
        case "OK":
            showMessage(i18n.successFulOTP, !0), previousOTPRequestMillis = (new Date).getTime(), countDownDynamicPinRemainingTime(otpRequestWaitMillis / 1e3);
            break;
        case "INVALID_PAN":
            showMessage(i18n.invalidPan), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc();
            break;
        case "INVALID_CAPTCHA":
            showMessage(i18n.invalidInput), $("#inputcapcha").parent().parent().addClass("invalid"), enableCaptcha(), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc();
            break;
        case "EXPIRED_CAPTCHA":
            showMessage(i18n.invalidInput), $("#inputcapcha").parent().parent().addClass("invalid"), refreshCaptcha(), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc();
            break;
        case "OTP_WAIT":
            showMessage(i18n.otpWaitMessage), refreshCaptcha(), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc();
            break;
        case "BLOCKER_ERROR":
            document.forms.resultForm.submit();
            break;
        case "COMMON_ERROR":
            showMessage(e.description), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc();
            break;
        case "SYSTEM_INTERNAL_ERROR":
            showMessage(i18n.systemInternalError), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc()
    } else showMessage(i18n.systemInternalError)
}

function disableOtpButton() {
    $("#otp-button").attr("disabled", "disabled")
}

function enableOtpButton() {
    $("#otp-button").removeAttr("disabled")
}

function disableCardNumber() {
    $("#cardnumber").attr("disabled", "disabled")
}

function enableCardNumber() {
    $("#cardnumber").removeAttr("disabled")
}

function disableCvv2KeyPad() {
    $("#cvv2KeyPad").attr("disabled", "disabled")
}

function enableCvv2KeyPad() {
    $("#cvv2KeyPad").removeAttr("disabled")
}

function disableCardListButton() {
    $("#card-list-button").attr("disabled", "disabled")
}

function enableCardListButton() {
    $("#card-list-button").removeAttr("disabled")
}

function disableInputCVV2() {
    $("#inputcvv2").attr("disabled", "disabled")
}

function enableInputCVV2() {
    $("#inputcvv2").removeAttr("disabled")
}

function disableInputMonth() {
    $("#inputmonth").attr("disabled", "disabled")
}

function enableInputMonth() {
    $("#inputmonth").removeAttr("disabled")
}

function disableInputYear() {
    $("#inputyear").attr("disabled", "disabled")
}

function enableInputYear() {
    $("#inputyear").removeAttr("disabled")
}

function disableInputMonthEnc() {
    $("#inputMonthEnc").attr("disabled", "disabled")
}

function enableInputMonthEnc() {
    $("#inputMonthEnc").removeAttr("disabled")
}

function disableInputYearEnc() {
    $("#inputYearEnc").attr("disabled", "disabled")
}

function enableInputYearEnc() {
    $("#inputYearEnc").removeAttr("disabled")
}

function disableCaptcha() {
    $("#captcha-button").attr("disabled", "disabled"), $("#inputcapcha").attr("disabled", "disabled")
}

function enableCaptcha() {
    $("#captcha-button").removeAttr("disabled"), $("#inputcapcha").removeAttr("disabled")
}

function countDownDynamicPinRemainingTime(e) {
    if (0 >= e) $("#otp-button").text(i18n.otpRequest), enableOtpButton(), enableCardNumber(), enableCvv2KeyPad(), enableCardListButton(), enableInputCVV2(), enableInputMonth(), enableInputYear(), enableInputMonthEnc(), enableInputYearEnc(), refreshCaptcha(), showMessage(i18n.otpRetryMessage);
    else {
        var n = Math.floor(e / 60),
            t = e % 60;
        $("#otp-button").text((n + "").padStart(2, "0") + ":" + (t + "").padStart(2, "0")), otpRemainingSeconds = e - 1, setTimeout("countDownDynamicPinRemainingTime(otpRemainingSeconds)", 1e3)
    }
}
var globalRemainingSeconds, terminalDiscountStatus, otpRequestWaitMillis, ctrlDown = !1,
    ctrlKey = 17,
    cmdKey = 91,
    panDtoList, encRefId, focusedField, shuffledArray, disableCountDown = !1,
    paymentSuccessfullyDone = !1,
    successResultSubmitted = !1,
    cursorPosition = 0,
    selectedPanIndex = -1,
    previousSelectedPanIndex = -1,
    previousPan, keyPadInputId, previousOTPRequestMillis, otpRemainingSeconds, availableBankLogos = {
        610433: "mellat",
        589905: "melli",
        170019: "melli",
        603799: "melli",
        603769: "saderat",
        639217: "keshavarzi",
        603770: "keshavarzi",
        589210: "sepah",
        627353: "tejarat",
        628023: "maskan",
        207177: "tose_saderat",
        627648: "tose_saderat",
        627961: "sanat_madan",
        627760: "postbank",
        621986: "saman",
        627412: "eghtesad_novin",
        639347: "pasargad",
        502229: "pasargad",
        639607: "sarmaye",
        627488: "karafarin",
        639194: "parsian",
        622106: "parsian",
        639346: "sina",
        589463: "refah",
        628157: "etebari_tose",
        504706: "shahr",
        502806: "shahr",
        502908: "tose_teavon",
        502938: "dey",
        606373: "gharzolhasane_mehr",
        639370: "etebari_mehr",
        627381: "ansar",
        636214: "ayandeh",
        636949: "hekmat_iranian",
        505785: "iran_zamin",
        505416: "gardeshgari",
        636795: "markazi",
        504172: "resalat",
        505801: "kosar",
        505809: "khavarmianeh",
        507677: "noor",
        606256: "melal",
        639599: "ghavamin"
    },
    processDiscountResponse = function(e) {
        if (hideBankLogoSpinner(), e)
            if ("SUCCESSFUL" === e.status) {
                var n = new Intl.NumberFormat,
                    t = n.format(e.discountAmount),
                    a = n.format(e.amountAfterDiscount);
                if (0 !== e.discountAmount) {
                    var i = i18n.discountMessage.replace("${amount}", t) + "<br>" + i18n.finalAmount + " " + a + " " + i18n.rial;
                    e.description && (i += "<br>" + e.description), openDiscountDialog(i, e.amountAfterDiscount)
                } else if (e.description) {
                    var i = i18n.discountDescriptionMessage.replace("${description}", e.description) + "<br>";
                    openDiscountDialog(i, e.amountAfterDiscount)
                }
                $("payButton").removeAttr("disabled")
            } else showMessage("MAX_DISCOUNT_CALL_EXCEEDED" === e.status ? i18n.maxDiscountCallExceeded : i18n.systemErrorInDiscountCheck);
        else showMessage(i18n.systemErrorInDiscountCheck)
    };
$(document).ajaxError(handleUnknownError), $(window).resize(setCardSuggestionListHeight);
